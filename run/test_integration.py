#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Test Integration
Ki·ªÉm tra t√≠ch h·ª£p Token Calculator v·ªõi all_in_one.py
"""

import logging
import sys
import os

# Th√™m th∆∞ m·ª•c hi·ªán t·∫°i v√†o path ƒë·ªÉ import
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_integration():
    """
    Test t√≠ch h·ª£p Token Calculator
    """
    # Setup logging
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(levelname)s - %(message)s'
    )
    
    print("Testing Token Calculator Integration...")
    
    try:
        # Test import TokenCalculator
        from token_calculator import TokenCalculator
        print("‚úÖ TokenCalculator import th√†nh c√¥ng")
        
        # Test import AllInOneProcessor
        from all_in_one import AllInOneProcessor
        print("‚úÖ AllInOneProcessor import th√†nh c√¥ng")
        
        # Test kh·ªüi t·∫°o TokenCalculator
        calc = TokenCalculator()
        print("‚úÖ TokenCalculator kh·ªüi t·∫°o th√†nh c√¥ng")
        
        # Test m·ªôt s·ªë API calls
        print("\nTesting API calls...")
        
        calc.track_api_call("test_translate", "Hello world", "Xin ch√†o th·∫ø gi·ªõi", api_type="gemini")
        calc.track_api_call("test_speech", audio_duration=60.0, api_type="deepgram")
        
        # Test summary
        print("\nTesting summary...")
        calc.log_summary()
        
        print("\n‚úÖ Integration test completed successfully!")
        
    except ImportError as e:
        print(f"‚ùå Import error: {str(e)}")
        return False
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")
        return False
    
    return True

if __name__ == "__main__":
    success = test_integration()
    if success:
        print("\nüéâ T·∫•t c·∫£ tests ƒë·ªÅu th√†nh c√¥ng!")
    else:
        print("\nüí• C√≥ l·ªói x·∫£y ra!")
